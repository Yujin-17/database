# 테이블 전체 조회 : 데이터가 많을 때 위험
select * from `user`;

select `id`, `name`, `yyyymmdd`, `hobby`, `introduce`, `email`, `createdAt`, `updatedAt`
from `user`;

-- 테이블명에 별칭 붙이기: 보기에 바뀌는건 없음
select * from `user`AS `person`;

-- 컬럼명에 별칭 붙이기: 보기에 바뀌는건 없음
select `id`, `name` AS '이름', `yyyymmdd` AS `생년월일`, `hobby`, `introduce`
from `user`;

-- 특정 컬럼 중복값 제거 -- 예) 동명이인 제거 
select distinct `name` from `user`;

-- 데이터의 개수 조회
select count(*) from `user`; 
select count(`name`) from `user`;
select count(1) As `count` from `user`;

-- 조건에 일치하는 데이터 조회
# id 컬럼이 8번인 데이터를 조회 
select * from `user` where `id` = 8;

# 이름이 `이연아`인 사용자의 생년월일 조회
select `yyyymmdd` from `user`
where `name` = '이연아';

# 이름이 `이연아`가 아닌 사용자의 데이터 조회
select * from `user`
where `name` != '이연아';

# 데이터의 생성일이 특정일(2022-01-05 00:00:00) 이후인 데이터를 조회
select * from `user`
where `createdAt` > "2022-01-05 00:00:00:";

# 자기소개가 없는(null인) 데이터 조회
select * from `user`
where `introduce` is null;

# 자기소개가 있는(null이 아닌) 데이터 조회
select * from `user`
where `introduce` is not null;

# id가 8, 9, 11번인 데이터 조회
select * from `user`
where `id` in (8, 9, 11);

-- 조건이 여러가지인 경우 - 논리 연산자
# id가 8번이거나 9번이거나 11번인 데이터 조회
select * from `user`
where `id` = 8 or `id` = 9 or `id` = 11; 

# 이름이 '이연아'이면서 취미가 '독서'인 데이터 조회
select * from `user`
where `name` = '이연아' and `hobby` = '독서';